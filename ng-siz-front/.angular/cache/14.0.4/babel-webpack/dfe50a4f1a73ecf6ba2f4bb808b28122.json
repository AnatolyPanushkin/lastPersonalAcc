{"ast":null,"code":"import { HttpErrorResponse, HttpResponse } from \"@angular/common/http\";\nimport { finalize, tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport let InterceptorService = /*#__PURE__*/(() => {\n  class InterceptorService {\n    constructor() {\n      this.totalRequests = 0;\n    }\n\n    intercept(req, next) {\n      this.totalRequests++;\n      return next.handle(req).pipe(tap(event => {\n        if (event instanceof HttpResponse) {\n          console.log('Server response. 200');\n        }\n      }, err => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status == 500) {\n            document.getElementById('loader').style.display = 'none';\n            document.getElementById('no-avaliable-database').style.display = '';\n            document.getElementById('ticket_table').style.display = 'none';\n          }\n\n          if (err.status == 0) {\n            document.getElementById('loader').style.display = 'none';\n            document.getElementById('no-avaliable-backend').style.display = '';\n            document.getElementById('ticket_table').style.display = 'none';\n          }\n\n          if (err.status == 408) {\n            document.getElementById('loader').style.display = 'none';\n            document.getElementById('wrong_time_request_message').style.display = '';\n            document.getElementById('ticket_table').style.display = 'none';\n          } else {}\n        }\n      }), finalize(() => {\n        this.totalRequests--;\n      }));\n    }\n\n  }\n\n  InterceptorService.ɵfac = function InterceptorService_Factory(t) {\n    return new (t || InterceptorService)();\n  };\n\n  InterceptorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InterceptorService,\n    factory: InterceptorService.ɵfac,\n    providedIn: 'root'\n  });\n  return InterceptorService;\n})();","map":null,"metadata":{},"sourceType":"module"}